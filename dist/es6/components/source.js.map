{"version":3,"sources":["../../../src/components/source.js"],"names":["React","PureComponent","cloneElement","PropTypes","MapContext","assert","deepEqual","propTypes","type","string","isRequired","id","sourceCounter","Source","constructor","props","_map","map","_sourceOptions","sourceOptions","changedKey","changedKeyCount","key","source","getSource","_createSource","setData","data","updateImage","url","coordinates","setCoordinates","console","warn","componentWillUnmount","off","_updateSource","requestAnimationFrame","style","_loaded","removeSource","addSource","_render","context","on","Children","children","child","render","bind"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {PureComponent, cloneElement} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\n\ntype SourceProps = {\n  id?: string,\n  type: string,\n  children?: any\n};\n\nlet sourceCounter = 0;\n\nexport default class Source<Props: SourceProps> extends PureComponent<Props> {\n  static propTypes = propTypes;\n\n  constructor(props: Props) {\n    super(props);\n    this.id = props.id || `jsx-source-${sourceCounter++}`;\n    this.type = props.type;\n  }\n\n  componentWillUnmount() {\n    /* global requestAnimationFrame */\n    // Do not remove source immediately because the\n    // dependent <Layer>s' componentWillUnmount() might not have been called\n    // Removing source before dependent layers will throw error\n    // TODO - find a more robust solution\n    const map = this._map;\n    if (map) {\n      map.off('styledata', this._updateSource);\n      requestAnimationFrame(() => {\n        if (map.style && map.style._loaded) {\n          map.removeSource(this.id);\n        }\n      });\n    }\n  }\n\n  id: string;\n  type: string;\n  _map: any = null;\n  _sourceOptions: any = {};\n\n  getSource() {\n    const map = this._map;\n    return map && map.style && map.getSource(this.id);\n  }\n\n  _createSource(sourceOptions: any) {\n    const map = this._map;\n    if (map.style && map.style._loaded) {\n      map.addSource(this.id, sourceOptions);\n    }\n  }\n\n  /* eslint-disable complexity */\n  _updateSource = () => {\n    const {type, _map: map} = this;\n    if (!map) {\n      return;\n    }\n\n    const {_sourceOptions: sourceOptions, props} = this;\n    assert(!props.id || props.id === this.id, 'source id changed');\n    assert(props.type === type, 'source type changed');\n\n    let changedKey = '';\n    let changedKeyCount = 0;\n\n    for (const key in props) {\n      if (key !== 'children' && key !== 'id' && !deepEqual(sourceOptions[key], props[key])) {\n        sourceOptions[key] = props[key];\n        changedKey = key;\n        changedKeyCount++;\n      }\n    }\n\n    const source = this.getSource();\n    if (!source) {\n      this._createSource(sourceOptions);\n      return;\n    }\n    if (!changedKeyCount) {\n      return;\n    }\n    if (type === 'geojson') {\n      source.setData(sourceOptions.data);\n    } else if (type === 'image') {\n      source.updateImage({url: sourceOptions.url, coordinates: sourceOptions.coordinates});\n    } else if (\n      (type === 'canvas' || type === 'video') &&\n      changedKeyCount === 1 &&\n      changedKey === 'coordinates'\n    ) {\n      source.setCoordinates(sourceOptions.coordinates);\n    } else {\n      // eslint-disable-next-line\n      console.warn(`Unable to update <Source> prop: ${changedKey}`);\n    }\n  };\n  /* eslint-enable complexity */\n\n  _render(context: MapContextProps) {\n    if (!this._map && context.map) {\n      this._map = context.map;\n      this._map.on('styledata', this._updateSource);\n    }\n    this._updateSource();\n    return React.Children.map(this.props.children, child =>\n      cloneElement(child, {\n        source: this.id\n      })\n    );\n  }\n\n  render() {\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\n  }\n}\n"],"file":"source.js"}