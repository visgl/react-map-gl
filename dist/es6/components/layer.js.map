{"version":3,"sources":["../../../src/components/layer.js"],"names":["React","PureComponent","PropTypes","MapContext","assert","deepEqual","LAYER_TYPES","fill","line","symbol","circle","raster","background","heatmap","hillshade","propTypes","type","oneOf","Object","keys","isRequired","id","string","source","beforeId","diffLayerStyles","map","props","prevProps","layout","paint","filter","minzoom","maxzoom","otherProps","moveLayer","prevLayout","key","setLayoutProperty","hasOwnProperty","undefined","prevPaint","setPaintProperty","setFilter","setLayerZoomRange","setLayerProperty","layerCounter","Layer","constructor","_map","_layerOptions","layerOptions","getLayer","_createLayer","assign","error","console","warn","componentDidMount","_updateLayer","componentDidUpdate","componentWillUnmount","off","style","_loaded","removeLayer","options","addLayer","_render","context","on","render","bind"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nimport type {MapContextProps} from './map-context';\n\nconst LAYER_TYPES = {\n  fill: 'fill',\n  line: 'line',\n  symbol: 'symbol',\n  circle: 'circle',\n  'fill-extrusion': 'fill-extrusion',\n  raster: 'raster',\n  background: 'background',\n  heatmap: 'heatmap',\n  hillshade: 'hillshade'\n};\n\nconst propTypes = {\n  type: PropTypes.oneOf(Object.keys(LAYER_TYPES)).isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\nexport type LayerTypes = $Keys<typeof LAYER_TYPES>;\n\ntype LayerProps = {\n  id?: string,\n  type: LayerTypes,\n  source?: string,\n  'source-layer'?: string,\n  beforeId?: string,\n  layout: any,\n  paint: any,\n  filter?: Array<mixed>,\n  minzoom?: number,\n  maxzoom?: number\n};\n\n/* eslint-disable complexity, max-statements */\nfunction diffLayerStyles(map: any, id: string, props: LayerProps, prevProps: LayerProps) {\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId, ...otherProps} = props;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    const prevLayout = prevProps.layout || {};\n    for (const key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n    for (const key in prevLayout) {\n      if (!layout.hasOwnProperty(key)) {\n        map.setLayoutProperty(id, key, undefined);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    const prevPaint = prevProps.paint || {};\n    for (const key in paint) {\n      if (!deepEqual(paint[key], prevPaint[key])) {\n        map.setPaintProperty(id, key, paint[key]);\n      }\n    }\n    for (const key in prevPaint) {\n      if (!paint.hasOwnProperty(key)) {\n        map.setPaintProperty(id, key, undefined);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n  for (const key in otherProps) {\n    if (!deepEqual(otherProps[key], prevProps[key])) {\n      map.setLayerProperty(id, key, otherProps[key]);\n    }\n  }\n}\n/* eslint-enable complexity, max-statements */\n\nlet layerCounter = 0;\n\nexport default class Layer<Props: LayerProps> extends PureComponent<Props> {\n  static propTypes = propTypes;\n\n  constructor(props: Props) {\n    super(props);\n    this.id = props.id || `jsx-layer-${layerCounter++}`;\n    this.type = props.type;\n  }\n\n  componentDidMount() {\n    this._updateLayer();\n  }\n\n  componentDidUpdate() {\n    this._updateLayer();\n  }\n\n  componentWillUnmount() {\n    const map = this._map;\n    if (map) {\n      map.off('styledata', this._updateLayer);\n      if (map.style && map.style._loaded) {\n        map.removeLayer(this.id);\n      }\n    }\n  }\n\n  id: string;\n  type: string;\n  _map: any = null;\n  _layerOptions: any = {};\n\n  getLayer() {\n    const map = this._map;\n    return map && map.style && map.getLayer(this.id);\n  }\n\n  _createLayer() {\n    const map = this._map;\n\n    if (map.style && map.style._loaded) {\n      const options = Object.assign({}, this.props);\n      options.id = this.id;\n      delete options.beforeId;\n\n      map.addLayer(options, this.props.beforeId);\n      this._layerOptions = options;\n    }\n  }\n\n  /* eslint-disable complexity */\n  _updateLayer = () => {\n    const map = this._map;\n    if (!map) {\n      return;\n    }\n\n    const {props, _layerOptions: layerOptions} = this;\n    assert(!props.id || props.id === this.id, 'layer id changed');\n    assert(props.type === this.type, 'layer type changed');\n\n    if (!this.getLayer()) {\n      this._createLayer();\n      return;\n    }\n\n    try {\n      diffLayerStyles(map, this.id, props, layerOptions);\n      Object.assign(layerOptions, props);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n    }\n  };\n  /* eslint-disable complexity */\n\n  _render(context: MapContextProps) {\n    if (!this._map && context.map) {\n      this._map = context.map;\n      this._map.on('styledata', this._updateLayer);\n    }\n    return null;\n  }\n\n  render() {\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\n  }\n}\n"],"file":"layer.js"}