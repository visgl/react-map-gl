{"version":3,"sources":["../../../src/components/draggable-control.js"],"names":["PropTypes","BaseControl","propTypes","Object","assign","draggable","bool","onDrag","func","onDragEnd","onDragStart","offsetLeft","number","offsetTop","defaultProps","DraggableControl","dragPos","dragOffset","event","captureDrag","props","stopPropagation","_getDragEventPosition","_getDragEventOffset","setState","_setupDragEvents","callbackEvent","lngLat","_getDragLngLat","state","_removeDragEvents","componentWillUnmount","eventManager","_context","_dragEvents","panmove","_onDrag","panend","_onDragEnd","pancancel","_onDragCancel","on","off","offsetCenter","x","y","center","container","_containerRef","current","rect","getBoundingClientRect","left","top","_getDraggedPosition","viewport","unproject"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport type {MjolnirEvent} from 'mjolnir.js';\nimport type {BaseControlProps} from './base-control';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  draggable: PropTypes.bool,\n  onDrag: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDragStart: PropTypes.func,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  draggable: false,\n  offsetLeft: 0,\n  offsetTop: 0\n});\n\ntype Coordinate = [number, number];\ntype Offset = [number, number];\ntype CallbackEvent = MjolnirEvent & {\n  lngLat: Coordinate\n};\n\nexport type DraggableControlProps = BaseControlProps & {\n  draggable: boolean,\n  onDrag?: CallbackEvent => any,\n  onDragEnd?: CallbackEvent => any,\n  onDragStart?: CallbackEvent => any,\n  offsetLeft: number,\n  offsetTop: number\n};\n\ntype State = {\n  dragPos: ?Coordinate,\n  dragOffset: ?Offset\n};\n\nexport default class DraggableControl<Props: DraggableControlProps> extends BaseControl<\n  Props,\n  State,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  state = {\n    dragPos: null,\n    dragOffset: null\n  };\n\n  _dragEvents: any = null;\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    this._removeDragEvents();\n  }\n\n  _setupDragEvents() {\n    const {eventManager} = this._context;\n    if (!eventManager) {\n      return;\n    }\n\n    // panstart is already attached by parent class BaseControl,\n    // here we just add listeners for subsequent drag events\n    this._dragEvents = {\n      panmove: this._onDrag,\n      panend: this._onDragEnd,\n      pancancel: this._onDragCancel\n    };\n    eventManager.on(this._dragEvents);\n  }\n\n  _removeDragEvents() {\n    const {eventManager} = this._context;\n    if (!eventManager || !this._dragEvents) {\n      return;\n    }\n    eventManager.off(this._dragEvents);\n    this._dragEvents = null;\n  }\n\n  _getDragEventPosition(event: MjolnirEvent): Coordinate {\n    const {\n      offsetCenter: {x, y}\n    } = event;\n    return [x, y];\n  }\n\n  /**\n   * Returns offset of top-left of marker from drag start event\n   * (used for positioning marker relative to next mouse coordinates)\n   */\n  _getDragEventOffset(event: MjolnirEvent): ?Offset {\n    const {\n      center: {x, y}\n    } = event;\n    const container = this._containerRef.current;\n    if (container) {\n      const rect = container.getBoundingClientRect();\n      return [rect.left - x, rect.top - y];\n    }\n    return null;\n  }\n\n  _getDraggedPosition(dragPos: Coordinate, dragOffset: Offset): Coordinate {\n    return [dragPos[0] + dragOffset[0], dragPos[1] + dragOffset[1]];\n  }\n\n  _getDragLngLat(dragPos: Coordinate, dragOffset: Offset): Coordinate {\n    const {offsetLeft, offsetTop} = this.props;\n    const [x, y] = this._getDraggedPosition(dragPos, dragOffset);\n    // Unproject x/y value while respecting offset coordinates\n    return this._context.viewport.unproject([x - offsetLeft, y - offsetTop]);\n  }\n\n  _onDragStart = (event: MjolnirEvent) => {\n    const {draggable, captureDrag} = this.props;\n    if (draggable || captureDrag) {\n      event.stopPropagation();\n    }\n    if (!draggable) {\n      return;\n    }\n\n    const dragPos = this._getDragEventPosition(event);\n    const dragOffset = this._getDragEventOffset(event);\n    this.setState({dragPos, dragOffset});\n    this._setupDragEvents();\n\n    const {onDragStart} = this.props;\n    if (onDragStart && dragOffset) {\n      const callbackEvent: CallbackEvent = Object.assign({}, event);\n      callbackEvent.lngLat = this._getDragLngLat(dragPos, dragOffset);\n      onDragStart(callbackEvent);\n    }\n  };\n\n  _onDrag = (event: MjolnirEvent) => {\n    event.stopPropagation();\n\n    const dragPos = this._getDragEventPosition(event);\n    this.setState({dragPos});\n\n    const {onDrag} = this.props;\n    const {dragOffset} = this.state;\n    if (onDrag && dragOffset) {\n      const callbackEvent: CallbackEvent = Object.assign({}, event);\n      callbackEvent.lngLat = this._getDragLngLat(dragPos, dragOffset);\n      onDrag(callbackEvent);\n    }\n  };\n\n  _onDragEnd = (event: MjolnirEvent) => {\n    const {dragPos, dragOffset} = this.state;\n\n    event.stopPropagation();\n    this.setState({dragPos: null, dragOffset: null});\n    this._removeDragEvents();\n\n    const {onDragEnd} = this.props;\n    if (onDragEnd && dragPos && dragOffset) {\n      const callbackEvent: CallbackEvent = Object.assign({}, event);\n      callbackEvent.lngLat = this._getDragLngLat(dragPos, dragOffset);\n      onDragEnd(callbackEvent);\n    }\n  };\n\n  _onDragCancel = (event: MjolnirEvent) => {\n    event.stopPropagation();\n    this.setState({dragPos: null, dragOffset: null});\n    this._removeDragEvents();\n  };\n}\n"],"file":"draggable-control.js"}