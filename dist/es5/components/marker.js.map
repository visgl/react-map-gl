{"version":3,"sources":["../../../src/components/marker.js"],"names":["propTypes","Object","assign","DraggableControl","className","PropTypes","string","longitude","number","isRequired","latitude","defaultProps","Marker","props","offsetLeft","offsetTop","state","dragPos","dragOffset","_getDraggedPosition","_context","viewport","project","x","y","_getPosition","transform","div","_containerRef","current","_control","style","draggable","containerStyle","position","left","top","cursor","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA;;AACA;;AACA;;AACA;;;;;;AAIA,IAAMA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,6BAAiBH,SAAnC,EAA8C;AAE9DI,EAAAA,SAAS,EAAEC,sBAAUC,MAFyC;AAI9DC,EAAAA,SAAS,EAAEF,sBAAUG,MAAV,CAAiBC,UAJkC;AAM9DC,EAAAA,QAAQ,EAAEL,sBAAUG,MAAV,CAAiBC;AANmC,CAA9C,CAAlB;AASA,IAAME,YAAY,GAAGV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,6BAAiBQ,YAAnC,EAAiD;AACpEP,EAAAA,SAAS,EAAE;AADyD,CAAjD,CAArB;;IAiBqBQ,M;;;;;;;;;;;;;;;iGAIH,I;;;;;;mCAEiB;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACxBN,SADwB,eACxBA,SADwB;AAAA,UACbG,QADa,eACbA,QADa;AAAA,UACHI,UADG,eACHA,UADG;AAAA,UACSC,SADT,eACSA,SADT;AAAA,wBAED,KAAKC,KAFJ;AAAA,UAExBC,OAFwB,eAExBA,OAFwB;AAAA,UAEfC,UAFe,eAEfA,UAFe;;AAK/B,UAAID,OAAO,IAAIC,UAAf,EAA2B;AACzB,eAAO,KAAKC,mBAAL,CAAyBF,OAAzB,EAAkCC,UAAlC,CAAP;AACD;;AAP8B,kCAUlB,KAAKE,QAAL,CAAcC,QAAd,CAAuBC,OAAvB,CAA+B,CAACf,SAAD,EAAYG,QAAZ,CAA/B,CAVkB;AAAA;AAAA,UAU1Ba,CAV0B;AAAA,UAUvBC,CAVuB;;AAW/BD,MAAAA,CAAC,IAAIT,UAAL;AACAU,MAAAA,CAAC,IAAIT,SAAL;AACA,aAAO,CAACQ,CAAD,EAAIC,CAAJ,CAAP;AACD;;;8BAES;AAAA,+BACO,KAAKC,YAAL,EADP;AAAA;AAAA,UACDF,CADC;AAAA,UACEC,CADF;;AAER,UAAME,SAAS,uBAAgB,4BAAWH,CAAX,CAAhB,iBAAoC,4BAAWC,CAAX,CAApC,QAAf;AACA,UAAMG,GAAG,GAAG,KAAKC,aAAL,CAAmBC,OAA/B;;AAEA,UAAI,KAAKC,QAAL,IAAiBH,GAArB,EAA0B;AAExBA,QAAAA,GAAG,CAACI,KAAJ,CAAUL,SAAV,GAAsBA,SAAtB;AACD,OAHD,MAGO;AAAA,2BAC0B,KAAKb,KAD/B;AAAA,YACET,SADF,gBACEA,SADF;AAAA,YACa4B,SADb,gBACaA,SADb;AAAA,YAEEf,OAFF,GAEa,KAAKD,KAFlB,CAEEC,OAFF;AAIL,YAAMgB,cAAc,GAAG;AACrBC,UAAAA,QAAQ,EAAE,UADW;AAErBC,UAAAA,IAAI,EAAE,CAFe;AAGrBC,UAAAA,GAAG,EAAE,CAHgB;AAIrBV,UAAAA,SAAS,EAATA,SAJqB;AAKrBW,UAAAA,MAAM,EAAEL,SAAS,GAAIf,OAAO,GAAG,UAAH,GAAgB,MAA3B,GAAqC;AALjC,SAAvB;AAQA,aAAKa,QAAL,GACE;AACE,UAAA,SAAS,4BAAqB1B,SAArB,CADX;AAEE,UAAA,GAAG,EAAE,KAAKwB,aAFZ;AAGE,UAAA,KAAK,EAAEK;AAHT,WAKG,KAAKpB,KAAL,CAAWyB,QALd,CADF;AASD;;AACD,aAAO,KAAKR,QAAZ;AACD;;;6BAEQ;AAEP,WAAKA,QAAL,GAAgB,IAAhB;AACA;AACD;;;EA3DiC3B,4B;;;iCAAfS,M,eACAZ,S;iCADAY,M,kBAEGD,Y","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport DraggableControl from './draggable-control';\nimport {crispPixel} from '../utils/crisp-pixel';\n\nimport type {DraggableControlProps} from './draggable-control';\n\nconst propTypes = Object.assign({}, DraggableControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired\n});\n\nconst defaultProps = Object.assign({}, DraggableControl.defaultProps, {\n  className: ''\n});\n\nexport type MarkerProps = DraggableControlProps & {\n  className: string,\n  longitude: number,\n  latitude: number\n};\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the marker's position when the parent re-renders.\n */\nexport default class Marker extends DraggableControl<MarkerProps> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  _control: any = null;\n\n  _getPosition(): [number, number] {\n    const {longitude, latitude, offsetLeft, offsetTop} = this.props;\n    const {dragPos, dragOffset} = this.state;\n\n    // If dragging, just return the current drag position\n    if (dragPos && dragOffset) {\n      return this._getDraggedPosition(dragPos, dragOffset);\n    }\n\n    // Otherwise return the projected lat/lng with offset\n    let [x, y] = this._context.viewport.project([longitude, latitude]);\n    x += offsetLeft;\n    y += offsetTop;\n    return [x, y];\n  }\n\n  _render() {\n    const [x, y] = this._getPosition();\n    const transform = `translate(${crispPixel(x)}px, ${crispPixel(y)}px)`;\n    const div = this._containerRef.current;\n\n    if (this._control && div) {\n      // Perf: avoid rerendering if only the viewport changed\n      div.style.transform = transform;\n    } else {\n      const {className, draggable} = this.props;\n      const {dragPos} = this.state;\n\n      const containerStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        transform,\n        cursor: draggable ? (dragPos ? 'grabbing' : 'grab') : 'auto'\n      };\n\n      this._control = (\n        <div\n          className={`mapboxgl-marker ${className}`}\n          ref={this._containerRef}\n          style={containerStyle}\n        >\n          {this.props.children}\n        </div>\n      );\n    }\n    return this._control;\n  }\n\n  render() {\n    // invalidate cached element\n    this._control = null;\n    return super.render();\n  }\n}\n"],"file":"marker.js"}