{"version":3,"sources":["../../../src/components/draggable-control.js"],"names":["propTypes","Object","assign","BaseControl","draggable","PropTypes","bool","onDrag","func","onDragEnd","onDragStart","offsetLeft","number","offsetTop","defaultProps","DraggableControl","dragPos","dragOffset","event","props","captureDrag","stopPropagation","_getDragEventPosition","_getDragEventOffset","setState","_setupDragEvents","callbackEvent","lngLat","_getDragLngLat","state","_removeDragEvents","eventManager","_context","_dragEvents","panmove","_onDrag","panend","_onDragEnd","pancancel","_onDragCancel","on","off","offsetCenter","x","y","center","container","_containerRef","current","rect","getBoundingClientRect","left","top","_getDraggedPosition","viewport","unproject"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport type {MjolnirEvent} from 'mjolnir.js';\nimport type {BaseControlProps} from './base-control';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  draggable: PropTypes.bool,\n  onDrag: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDragStart: PropTypes.func,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  draggable: false,\n  offsetLeft: 0,\n  offsetTop: 0\n});\n\ntype Coordinate = [number, number];\ntype Offset = [number, number];\ntype CallbackEvent = MjolnirEvent & {\n  lngLat: Coordinate\n};\n\nexport type DraggableControlProps = BaseControlProps & {\n  draggable: boolean,\n  onDrag?: CallbackEvent => any,\n  onDragEnd?: CallbackEvent => any,\n  onDragStart?: CallbackEvent => any,\n  offsetLeft: number,\n  offsetTop: number\n};\n\ntype State = {\n  dragPos: ?Coordinate,\n  dragOffset: ?Offset\n};\n\nexport default class DraggableControl<Props: DraggableControlProps> extends BaseControl<\n  Props,\n  State,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  state = {\n    dragPos: null,\n    dragOffset: null\n  };\n\n  _dragEvents: any = null;\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    this._removeDragEvents();\n  }\n\n  _setupDragEvents() {\n    const {eventManager} = this._context;\n    if (!eventManager) {\n      return;\n    }\n\n    // panstart is already attached by parent class BaseControl,\n    // here we just add listeners for subsequent drag events\n    this._dragEvents = {\n      panmove: this._onDrag,\n      panend: this._onDragEnd,\n      pancancel: this._onDragCancel\n    };\n    eventManager.on(this._dragEvents);\n  }\n\n  _removeDragEvents() {\n    const {eventManager} = this._context;\n    if (!eventManager || !this._dragEvents) {\n      return;\n    }\n    eventManager.off(this._dragEvents);\n    this._dragEvents = null;\n  }\n\n  _getDragEventPosition(event: MjolnirEvent): Coordinate {\n    const {\n      offsetCenter: {x, y}\n    } = event;\n    return [x, y];\n  }\n\n  /**\n   * Returns offset of top-left of marker from drag start event\n   * (used for positioning marker relative to next mouse coordinates)\n   */\n  _getDragEventOffset(event: MjolnirEvent): ?Offset {\n    const {\n      center: {x, y}\n    } = event;\n    const container = this._containerRef.current;\n    if (container) {\n      const rect = container.getBoundingClientRect();\n      return [rect.left - x, rect.top - y];\n    }\n    return null;\n  }\n\n  _getDraggedPosition(dragPos: Coordinate, dragOffset: Offset): Coordinate {\n    return [dragPos[0] + dragOffset[0], dragPos[1] + dragOffset[1]];\n  }\n\n  _getDragLngLat(dragPos: Coordinate, dragOffset: Offset): Coordinate {\n    const {offsetLeft, offsetTop} = this.props;\n    const [x, y] = this._getDraggedPosition(dragPos, dragOffset);\n    // Unproject x/y value while respecting offset coordinates\n    return this._context.viewport.unproject([x - offsetLeft, y - offsetTop]);\n  }\n\n  _onDragStart = (event: MjolnirEvent) => {\n    const {draggable, captureDrag} = this.props;\n    if (draggable || captureDrag) {\n      event.stopPropagation();\n    }\n    if (!draggable) {\n      return;\n    }\n\n    const dragPos = this._getDragEventPosition(event);\n    const dragOffset = this._getDragEventOffset(event);\n    this.setState({dragPos, dragOffset});\n    this._setupDragEvents();\n\n    const {onDragStart} = this.props;\n    if (onDragStart && dragOffset) {\n      const callbackEvent: CallbackEvent = Object.assign({}, event);\n      callbackEvent.lngLat = this._getDragLngLat(dragPos, dragOffset);\n      onDragStart(callbackEvent);\n    }\n  };\n\n  _onDrag = (event: MjolnirEvent) => {\n    event.stopPropagation();\n\n    const dragPos = this._getDragEventPosition(event);\n    this.setState({dragPos});\n\n    const {onDrag} = this.props;\n    const {dragOffset} = this.state;\n    if (onDrag && dragOffset) {\n      const callbackEvent: CallbackEvent = Object.assign({}, event);\n      callbackEvent.lngLat = this._getDragLngLat(dragPos, dragOffset);\n      onDrag(callbackEvent);\n    }\n  };\n\n  _onDragEnd = (event: MjolnirEvent) => {\n    const {dragPos, dragOffset} = this.state;\n\n    event.stopPropagation();\n    this.setState({dragPos: null, dragOffset: null});\n    this._removeDragEvents();\n\n    const {onDragEnd} = this.props;\n    if (onDragEnd && dragPos && dragOffset) {\n      const callbackEvent: CallbackEvent = Object.assign({}, event);\n      callbackEvent.lngLat = this._getDragLngLat(dragPos, dragOffset);\n      onDragEnd(callbackEvent);\n    }\n  };\n\n  _onDragCancel = (event: MjolnirEvent) => {\n    event.stopPropagation();\n    this.setState({dragPos: null, dragOffset: null});\n    this._removeDragEvents();\n  };\n}\n"],"file":"draggable-control.js"}