{"version":3,"sources":["../../../src/utils/deprecate-warn.js"],"names":["DEPRECATED_PROPS","old","getDeprecatedText","name","getNewText","checkDeprecatedProps","props","forEach","depProp","hasOwnProperty","warnMessage","console","warn"],"mappings":";;;;;;AAGA,IAAMA,gBAAgB,GAAG,CACvB;AAACC,EAAAA,GAAG,EAAE,kBAAN;AAA0B,SAAK;AAA/B,CADuB,EAEvB;AAACA,EAAAA,GAAG,EAAE,oBAAN;AAA4B,SAAK;AAAjC,CAFuB,EAGvB;AAACA,EAAAA,GAAG,EAAE,iBAAN;AAAyB,SAAK;AAA9B,CAHuB,EAIvB;AAACA,EAAAA,GAAG,EAAE,iBAAN;AAAyB,SAAK;AAA9B,CAJuB,EAKvB;AAACA,EAAAA,GAAG,EAAE,iBAAN;AAAyB,SAAK;AAA9B,CALuB,EAMvB;AAACA,EAAAA,GAAG,EAAE,aAAN;AAAqB,SAAK;AAA1B,CANuB,CAAzB;;AASA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiD;AAC/C,kCAA0BA,IAA1B;AACD;;AAED,SAASC,UAAT,CAAoBD,IAApB,EAA0C;AACxC,wBAAgBA,IAAhB;AACD;;AAOc,SAASE,oBAAT,GAA+C;AAAA,MAAjBC,KAAiB,uEAAJ,EAAI;AAE5DN,EAAAA,gBAAgB,CAACO,OAAjB,CAAyB,UAAAC,OAAO,EAAI;AAClC,QAAIF,KAAK,CAACG,cAAN,CAAqBD,OAAO,CAACP,GAA7B,CAAJ,EAAuC;AACrC,UAAIS,WAAW,GAAGR,iBAAiB,CAACM,OAAO,CAACP,GAAT,CAAnC;;AACA,UAAIO,OAAO,OAAX,EAAiB;AACfE,QAAAA,WAAW,aAAMA,WAAN,cAAqBN,UAAU,CAACI,OAAO,OAAR,CAA/B,CAAX;AACD;;AACDG,MAAAA,OAAO,CAACC,IAAR,CAAaF,WAAb;AACD;AACF,GARD;AASD","sourcesContent":["// @flow\n\n// 'new' is optional\nconst DEPRECATED_PROPS = [\n  {old: 'onChangeViewport', new: 'onViewportChange'},\n  {old: 'perspectiveEnabled', new: 'dragRotate'},\n  {old: 'onHoverFeatures', new: 'onHover'},\n  {old: 'onClickFeatures', new: 'onClick'},\n  {old: 'touchZoomRotate', new: 'touchZoom, touchRotate'},\n  {old: 'mapControls', new: 'controller'}\n];\n\nfunction getDeprecatedText(name: string): string {\n  return `react-map-gl: \\`${name}\\` is removed.`;\n}\n\nfunction getNewText(name: string): string {\n  return `Use \\`${name}\\` instead.`;\n}\n\n/**\n * Checks props object for any prop that is deprecated and insert a console\n * warning to the user. This will also print out the recommended new prop/API\n * if one exists.\n */\nexport default function checkDeprecatedProps(props: any = {}) {\n  /* eslint-disable no-console, no-undef */\n  DEPRECATED_PROPS.forEach(depProp => {\n    if (props.hasOwnProperty(depProp.old)) {\n      let warnMessage = getDeprecatedText(depProp.old);\n      if (depProp.new) {\n        warnMessage = `${warnMessage} ${getNewText(depProp.new)}`;\n      }\n      console.warn(warnMessage);\n    }\n  });\n}\n"],"file":"deprecate-warn.js"}