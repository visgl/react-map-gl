{"version":3,"sources":["../../../src/components/navigation-control.js"],"names":["React","PropTypes","BaseControl","MapState","LINEAR_TRANSITION_PROPS","deprecateWarn","compareVersions","noop","propTypes","Object","assign","className","string","onViewStateChange","func","onViewportChange","showCompass","bool","showZoom","zoomInLabel","zoomOutLabel","compassLabel","defaultProps","VERSION_LEGACY","VERSION_1_6","getUIVersion","mapboxVersion","NavigationControl","props","_updateViewport","zoom","_context","viewport","bearing","pitch","opts","mapState","viewState","getViewportProps","style","transform","_uiVersion","type","label","callback","children","map","version","_containerRef","_renderButton","_onZoomIn","_onZoomOut","_onResetNorth","_renderCompass"],"mappings":";;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAAQC,uBAAR,QAAsC,yBAAtC;AAEA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAAQC,eAAR,QAA8B,kBAA9B;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAE,CAArB;;AAEA,IAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,WAAW,CAACM,SAA9B,EAAyC;AAEzDG,EAAAA,SAAS,EAAEV,SAAS,CAACW,MAFoC;AAKzDC,EAAAA,iBAAiB,EAAEZ,SAAS,CAACa,IAL4B;AAMzDC,EAAAA,gBAAgB,EAAEd,SAAS,CAACa,IAN6B;AAQzDE,EAAAA,WAAW,EAAEf,SAAS,CAACgB,IARkC;AAUzDC,EAAAA,QAAQ,EAAEjB,SAAS,CAACgB,IAVqC;AAYzDE,EAAAA,WAAW,EAAElB,SAAS,CAACW,MAZkC;AAazDQ,EAAAA,YAAY,EAAEnB,SAAS,CAACW,MAbiC;AAczDS,EAAAA,YAAY,EAAEpB,SAAS,CAACW;AAdiC,CAAzC,CAAlB;AAiBA,IAAMU,YAAY,GAAGb,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,WAAW,CAACoB,YAA9B,EAA4C;AAC/DX,EAAAA,SAAS,EAAE,EADoD;AAE/DK,EAAAA,WAAW,EAAE,IAFkD;AAG/DE,EAAAA,QAAQ,EAAE,IAHqD;AAI/DC,EAAAA,WAAW,EAAE,SAJkD;AAK/DC,EAAAA,YAAY,EAAE,UALiD;AAM/DC,EAAAA,YAAY,EAAE;AANiD,CAA5C,CAArB;AA6BA,IAAME,cAAc,GAAG,CAAvB;AACA,IAAMC,WAAW,GAAG,CAApB;;AAEA,SAASC,YAAT,CAAsBC,aAAtB,EAAqD;AACnD,SAAOpB,eAAe,CAACoB,aAAD,EAAgB,OAAhB,CAAf,IAA2C,CAA3C,GAA+CF,WAA/C,GAA6DD,cAApE;AACD;;IAMoBI,iB;;;;;AAQnB,6BAAYC,KAAZ,EAA2C;AAAA;;AAAA;;AACzC,8BAAMA,KAAN;;AADyC;;AAAA,gEAwB/B,YAAM;AAChB,YAAKC,eAAL,CAAqB;AAACC,QAAAA,IAAI,EAAE,MAAKC,QAAL,CAAcC,QAAd,CAAuBF,IAAvB,GAA8B;AAArC,OAArB;AACD,KA1B0C;;AAAA,iEA4B9B,YAAM;AACjB,YAAKD,eAAL,CAAqB;AAACC,QAAAA,IAAI,EAAE,MAAKC,QAAL,CAAcC,QAAd,CAAuBF,IAAvB,GAA8B;AAArC,OAArB;AACD,KA9B0C;;AAAA,oEAgC3B,YAAM;AACpB,YAAKD,eAAL,CAAqB;AAACI,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAArB;AACD,KAlC0C;;AAGzC7B,IAAAA,aAAa,CAACuB,KAAD,CAAb;AAHyC;AAI1C;;;;oCAIeO,I,EAA6B;AAAA,UACpCH,QADoC,GACxB,KAAKD,QADmB,CACpCC,QADoC;AAE3C,UAAMI,QAAQ,GAAG,IAAIjC,QAAJ,CAAaM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBsB,QAAlB,EAA4BG,IAA5B,CAAb,CAAjB;AACA,UAAME,SAAS,GAAG5B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB0B,QAAQ,CAACE,gBAAT,EAAlB,EAA+ClC,uBAA/C,CAAlB;AAEA,UAAMW,gBAAgB,GAAG,KAAKa,KAAL,CAAWb,gBAAX,IAA+B,KAAKgB,QAAL,CAAchB,gBAA7C,IAAiER,IAA1F;AACA,UAAMM,iBAAiB,GACrB,KAAKe,KAAL,CAAWf,iBAAX,IAAgC,KAAKkB,QAAL,CAAclB,iBAA9C,IAAmEN,IADrE;AAIAM,MAAAA,iBAAiB,CAAC;AAACwB,QAAAA,SAAS,EAATA;AAAD,OAAD,CAAjB;AAGAtB,MAAAA,gBAAgB,CAACsB,SAAD,CAAhB;AACD;;;qCAcgB;AAAA,UACRJ,OADQ,GACG,KAAKF,QAAL,CAAcC,QADjB,CACRC,OADQ;AAEf,UAAMM,KAAK,GAAG;AAACC,QAAAA,SAAS,mBAAY,CAACP,OAAb;AAAV,OAAd;AAEA,aAAO,KAAKQ,UAAL,KAAoBjB,WAApB,GACL;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,uBAAY,MAAjD;AAAwD,QAAA,KAAK,EAAEe;AAA/D,QADK,GAGL;AAAM,QAAA,SAAS,EAAC,6BAAhB;AAA8C,QAAA,KAAK,EAAEA;AAArD,QAHF;AAKD;;;kCAEaG,I,EAAcC,K,EAAeC,Q,EAAoBC,Q,EAAe;AAC5E,aACE;AACE,QAAA,GAAG,EAAEH,IADP;AAEE,QAAA,SAAS,6CAAsCA,IAAtC,CAFX;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,KAAK,EAAEC,KAJT;AAKE,QAAA,OAAO,EAAEC;AALX,SAOGC,QAAQ,IAAI;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,uBAAY;AAAjD,QAPf,CADF;AAWD;;;8BAES;AAAA,wBAC4E,KAAKjB,KADjF;AAAA,UACDjB,SADC,eACDA,SADC;AAAA,UACUK,WADV,eACUA,WADV;AAAA,UACuBE,QADvB,eACuBA,QADvB;AAAA,UACiCC,WADjC,eACiCA,WADjC;AAAA,UAC8CC,YAD9C,eAC8CA,YAD9C;AAAA,UAC4DC,YAD5D,eAC4DA,YAD5D;;AAGR,UAAI,CAAC,KAAKoB,UAAV,EAAsB;AAAA,YAGbK,GAHa,GAGN,KAAKf,QAHC,CAGbe,GAHa;AAIpB,aAAKL,UAAL,GAAkBK,GAAG,GAAGrB,YAAY,CAACqB,GAAG,CAACC,OAAL,CAAf,GAA+BvB,WAApD;AACD;;AAED,aACE;AAAK,QAAA,SAAS,8CAAuCb,SAAvC,CAAd;AAAkE,QAAA,GAAG,EAAE,KAAKqC;AAA5E,SACG9B,QAAQ,IAAI,KAAK+B,aAAL,CAAmB,SAAnB,EAA8B9B,WAA9B,EAA2C,KAAK+B,SAAhD,CADf,EAEGhC,QAAQ,IAAI,KAAK+B,aAAL,CAAmB,UAAnB,EAA+B7B,YAA/B,EAA6C,KAAK+B,UAAlD,CAFf,EAGGnC,WAAW,IACV,KAAKiC,aAAL,CAAmB,SAAnB,EAA8B5B,YAA9B,EAA4C,KAAK+B,aAAjD,EAAgE,KAAKC,cAAL,EAAhE,CAJJ,CADF;AAQD;;;;EAvF4CnD,W;;gBAA1ByB,iB,eAKAnB,S;;gBALAmB,iB,kBAMGL,Y;;SANHK,iB","sourcesContent":["// @flow\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\n\nimport deprecateWarn from '../utils/deprecate-warn';\nimport {compareVersions} from '../utils/version';\n\nimport type {BaseControlProps} from './base-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool,\n  // Custom labels assigned to the controls\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  compassLabel: PropTypes.string\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  compassLabel: 'Reset North'\n});\n\nexport type NavigationControlProps = BaseControlProps & {\n  className: string,\n  onViewStateChange?: Function,\n  onViewportChange?: Function,\n  showCompass: boolean,\n  showZoom: boolean,\n  zoomInLabel: string,\n  zoomOutLabel: string,\n  compassLabel: string\n};\n\ntype ViewportProps = {\n  longitude: number,\n  latitude: number,\n  zoom: number,\n  pitch: number,\n  bearing: number\n};\n\n// Mapbox version flags. CSS classes were changed in certain versions.\nconst VERSION_LEGACY = 1;\nconst VERSION_1_6 = 2;\n\nfunction getUIVersion(mapboxVersion: string): number {\n  return compareVersions(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\n}\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nexport default class NavigationControl extends BaseControl<\n  NavigationControlProps,\n  *,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props: NavigationControlProps) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n  }\n\n  _uiVersion: number;\n\n  _updateViewport(opts: $Shape<ViewportProps>) {\n    const {viewport} = this._context;\n    const mapState = new MapState(Object.assign({}, viewport, opts));\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\n    const onViewStateChange =\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\n\n    // Call new style callback\n    onViewStateChange({viewState});\n\n    // Call old style callback\n    onViewportChange(viewState);\n  }\n\n  _onZoomIn = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom + 1});\n  };\n\n  _onZoomOut = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom - 1});\n  };\n\n  _onResetNorth = () => {\n    this._updateViewport({bearing: 0, pitch: 0});\n  };\n\n  _renderCompass() {\n    const {bearing} = this._context.viewport;\n    const style = {transform: `rotate(${-bearing}deg)`};\n\n    return this._uiVersion === VERSION_1_6 ? (\n      <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" style={style} />\n    ) : (\n      <span className=\"mapboxgl-ctrl-compass-arrow\" style={style} />\n    );\n  }\n\n  _renderButton(type: string, label: string, callback: Function, children: any) {\n    return (\n      <button\n        key={type}\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n        type=\"button\"\n        title={label}\n        onClick={callback}\n      >\n        {children || <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />}\n      </button>\n    );\n  }\n\n  _render() {\n    const {className, showCompass, showZoom, zoomInLabel, zoomOutLabel, compassLabel} = this.props;\n\n    if (!this._uiVersion) {\n      // map may not exist if context is provided by user application (e.g. DeckGL)\n      // in which case we fallback to the most recent UI\n      const {map} = this._context;\n      this._uiVersion = map ? getUIVersion(map.version) : VERSION_1_6;\n    }\n\n    return (\n      <div className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`} ref={this._containerRef}>\n        {showZoom && this._renderButton('zoom-in', zoomInLabel, this._onZoomIn)}\n        {showZoom && this._renderButton('zoom-out', zoomOutLabel, this._onZoomOut)}\n        {showCompass &&\n          this._renderButton('compass', compassLabel, this._onResetNorth, this._renderCompass())}\n      </div>\n    );\n  }\n}\n"],"file":"navigation-control.js"}