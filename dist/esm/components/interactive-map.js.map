{"version":3,"sources":["../../../src/components/interactive-map.js"],"names":["React","PureComponent","createRef","PropTypes","StaticMap","MAPBOX_LIMITS","WebMercatorViewport","TransitionManager","MapContext","EventManager","MapController","deprecateWarn","propTypes","Object","assign","maxZoom","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","onInteractionStateChange","transitionDuration","oneOfType","string","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onDblClick","onContextMenu","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onMouseEnter","onMouseLeave","onMouseOut","onWheel","touchAction","clickRadius","interactiveLayerIds","array","getCursor","controller","instanceOf","getDefaultCursor","isDragging","isHovering","defaultProps","onNativeClick","event","preventDefault","InteractiveMap","supported","props","isLoaded","_staticMapRef","current","getMap","geometry","options","map","queryRenderedFeatures","interactionState","state","_updateInteractiveContext","setState","width","height","_width","_height","_setControllerProps","onResize","viewState","oldViewState","onLoad","callbackName","_normalizeEvent","pointerType","_onEvent","features","_getFeatures","pos","point","radius","Boolean","length","isEntering","isExiting","callbacks","isDoubleClickEnabled","type","push","filter","forEach","cb","_controller","_eventManager","eventManager","mapContainer","_eventCanvasRef","setElement","on","pointerdown","_onPointerDown","pointermove","_onPointerMove","pointerup","_onPointerUp","pointerleave","bind","click","_onClick","anyclick","dblclick","wheel","contextmenu","destroy","isInteractive","_onViewportChange","onStateChange","_onInteractionStateChange","setOptions","context","_interactiveContext","queryParams","layers","size","bbox","updatedContext","lngLat","offsetCenter","x","y","viewport","unproject","style","eventCanvasStyle","position","cursor","_onResize","_onLoad","children"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport {PureComponent, createRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport StaticMap from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport TransitionManager from '../utils/transition-manager';\nimport MapContext from './map-context';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapController from '../utils/map-controller';\nimport deprecateWarn from '../utils/deprecate-warn';\n\nimport type {ViewState} from '../mapbox/mapbox';\nimport type {StaticMapProps} from './static-map';\nimport type {MjolnirEvent} from 'mjolnir.js';\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.bool,\n  // Drag to pan\n  dragPan: PropTypes.bool,\n  // Drag to rotate\n  dragRotate: PropTypes.bool,\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.bool,\n  // Multitouch rotate\n  touchRotate: PropTypes.bool,\n  // Keyboard\n  keyboard: PropTypes.bool,\n\n  /** Event callbacks */\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onWheel: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** List of layers that are interactive */\n  interactiveLayerIds: PropTypes.array,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controller\n  // The object must expose a method: `setOptions(opts)`\n  controller: PropTypes.instanceOf(MapController)\n});\n\ntype State = {\n  isLoaded: boolean,\n  isDragging: boolean,\n  isHovering: boolean\n};\n\nconst getDefaultCursor = ({isDragging, isHovering}: State) =>\n  isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n\nconst defaultProps = Object.assign(\n  {},\n  StaticMap.defaultProps,\n  MAPBOX_LIMITS,\n  TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onNativeClick: null,\n    onHover: null,\n    onContextMenu: (event: MouseEvent) => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n    touchZoom: true,\n    touchRotate: false,\n    keyboard: true,\n\n    touchAction: 'none',\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\ntype InteractionState = {\n  isDragging: boolean\n};\n\ntype MapEvent = MjolnirEvent & {\n  point: Array<number>,\n  lngLat: Array<number>,\n  features: ?Array<any>\n};\n\nexport type InteractiveMapProps = StaticMapProps & {\n  onViewStateChange: Function,\n  onViewportChange: Function,\n  onInteractionStateChange: Function,\n  onHover: Function,\n  onClick: Function,\n  onNativeClick: Function,\n  onDblClick: Function,\n  onContextMenu: Function,\n  onMouseDown: Function,\n  onMouseMove: Function,\n  onMouseUp: Function,\n  onTouchStart: Function,\n  onTouchMove: Function,\n  onTouchEnd: Function,\n  onMouseEnter: Function,\n  onMouseLeave: Function,\n  onMouseOut: Function,\n  onWheel: Function,\n\n  transitionDuration: number,\n  transitionInterpolator: any,\n  transitionInterruption: number,\n  transitionEasing: Function,\n\n  scrollZoom: boolean,\n  dragPan: boolean,\n  dragRotate: boolean,\n  doubleClickZoom: boolean,\n  touchZoom: boolean,\n  touchRotate: boolean,\n  keyboard: boolean,\n\n  touchAction: string,\n  clickRadius: number,\n  interactiveLayerIds: Array<string>,\n  getCursor: Function,\n  controller: MapController\n};\n\nexport default class InteractiveMap extends PureComponent<InteractiveMapProps, State> {\n  static supported() {\n    return StaticMap.supported();\n  }\n\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props: InteractiveMapProps) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n\n    // If props.controller is not provided, fallback to default MapController instance\n    // Cannot use defaultProps here because it needs to be per map instance\n    this._controller = props.controller || new MapController();\n\n    this._eventManager = new EventManager(null, {\n      touchAction: props.touchAction\n    });\n\n    this._updateInteractiveContext({\n      isDragging: false,\n      eventManager: this._eventManager\n    });\n  }\n\n  state: State = {\n    // Whether mapbox styles have finished loading\n    isLoaded: false,\n    // Whether the cursor is down\n    isDragging: false,\n    // Whether the cursor is over a clickable feature\n    isHovering: false\n  };\n\n  componentDidMount() {\n    const eventManager = this._eventManager;\n\n    const mapContainer = this._eventCanvasRef.current;\n    eventManager.setElement(mapContainer);\n    // Register additional event handlers for click and hover\n    eventManager.on({\n      pointerdown: this._onPointerDown,\n      pointermove: this._onPointerMove,\n      pointerup: this._onPointerUp,\n      pointerleave: this._onEvent.bind(this, 'onMouseOut'),\n      click: this._onClick,\n      anyclick: this._onClick,\n      dblclick: this._onEvent.bind(this, 'onDblClick'),\n      wheel: this._onEvent.bind(this, 'onWheel'),\n      contextmenu: this._onEvent.bind(this, 'onContextMenu')\n    });\n\n    this._setControllerProps(this.props);\n\n    this._updateInteractiveContext({mapContainer});\n  }\n\n  componentDidUpdate() {\n    this._setControllerProps(this.props);\n  }\n\n  componentWillUnmount() {\n    this._eventManager.destroy();\n  }\n\n  _controller: MapController;\n  _eventManager: any;\n  _interactiveContext: MapContextProps;\n  _width: number = 0;\n  _height: number = 0;\n  _eventCanvasRef: {current: null | HTMLDivElement} = createRef();\n  _staticMapRef: {current: null | StaticMap} = createRef();\n\n  getMap = () => {\n    return this._staticMapRef.current ? this._staticMapRef.current.getMap() : null;\n  };\n\n  queryRenderedFeatures = (geometry: any, options: any = {}) => {\n    const map = this.getMap();\n    return map && map.queryRenderedFeatures(geometry, options);\n  };\n\n  _setControllerProps(props: InteractiveMapProps) {\n    props = Object.assign({}, props, props.viewState, {\n      isInteractive: Boolean(props.onViewStateChange || props.onViewportChange),\n      onViewportChange: this._onViewportChange,\n      onStateChange: this._onInteractionStateChange,\n      eventManager: this._eventManager,\n      width: this._width,\n      height: this._height\n    });\n\n    this._controller.setOptions(props);\n\n    // Pass callbacks via MapContext\n    // Do not create a new context object because these do not affect render\n    const context = this._interactiveContext;\n    context.onViewportChange = props.onViewportChange;\n    context.onViewStateChange = props.onViewStateChange;\n  }\n\n  _getFeatures({pos, radius}: {pos: Array<number>, radius: number}) {\n    let features;\n    const queryParams = {};\n    const map = this.getMap();\n\n    if (this.props.interactiveLayerIds) {\n      queryParams.layers = this.props.interactiveLayerIds;\n    }\n\n    if (radius) {\n      // Radius enables point features, like marker symbols, to be clicked.\n      const size = radius;\n      const bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\n      features = map && map.queryRenderedFeatures(bbox, queryParams);\n    } else {\n      features = map && map.queryRenderedFeatures(pos, queryParams);\n    }\n    return features;\n  }\n\n  _onInteractionStateChange = (interactionState: InteractionState) => {\n    const {isDragging = false} = interactionState;\n    if (isDragging !== this.state.isDragging) {\n      this._updateInteractiveContext({isDragging});\n      this.setState({isDragging});\n    }\n\n    const {onInteractionStateChange} = this.props;\n    if (onInteractionStateChange) {\n      onInteractionStateChange(interactionState);\n    }\n  };\n\n  _updateInteractiveContext(updatedContext: $Shape<MapContextProps>) {\n    this._interactiveContext = Object.assign({}, this._interactiveContext, updatedContext);\n  }\n\n  _onResize = ({width, height}: {width: number, height: number}) => {\n    this._width = width;\n    this._height = height;\n    this._setControllerProps(this.props);\n    this.props.onResize({width, height});\n  };\n\n  _onViewportChange = (\n    viewState: ViewState,\n    interactionState: InteractionState,\n    oldViewState: ViewState\n  ) => {\n    const {onViewStateChange, onViewportChange} = this.props;\n\n    if (onViewStateChange) {\n      onViewStateChange({viewState, interactionState, oldViewState});\n    }\n    if (onViewportChange) {\n      onViewportChange(viewState, interactionState, oldViewState);\n    }\n  };\n\n  /* Generic event handling */\n  _normalizeEvent(event: MapEvent) {\n    if (event.lngLat) {\n      // Already unprojected\n      return event;\n    }\n\n    const {\n      offsetCenter: {x, y}\n    } = event;\n    const pos = [x, y];\n\n    const viewport = new WebMercatorViewport(\n      // $FlowFixMe\n      Object.assign({}, this.props, {\n        width: this._width,\n        height: this._height\n      })\n    );\n\n    event.point = pos;\n    event.lngLat = viewport.unproject(pos);\n\n    return event;\n  }\n\n  _onLoad = (event: MapEvent) => {\n    this.setState({isLoaded: true});\n    this.props.onLoad(event);\n  };\n\n  _onEvent = (callbackName: string, event: MapEvent) => {\n    const func = this.props[callbackName];\n    if (func) {\n      func(this._normalizeEvent(event));\n    }\n  };\n\n  /* Special case event handling */\n  _onPointerDown = (event: MapEvent) => {\n    switch (event.pointerType) {\n      case 'touch':\n        this._onEvent('onTouchStart', event);\n        break;\n\n      default:\n        this._onEvent('onMouseDown', event);\n    }\n  };\n\n  _onPointerUp = (event: MapEvent) => {\n    switch (event.pointerType) {\n      case 'touch':\n        this._onEvent('onTouchEnd', event);\n        break;\n\n      default:\n        this._onEvent('onMouseUp', event);\n    }\n  };\n\n  // eslint-disable-next-line complexity\n  _onPointerMove = (event: MapEvent) => {\n    switch (event.pointerType) {\n      case 'touch':\n        this._onEvent('onTouchMove', event);\n        break;\n\n      default:\n        this._onEvent('onMouseMove', event);\n    }\n\n    if (!this.state.isDragging) {\n      const {onHover, interactiveLayerIds} = this.props;\n      let features;\n      event = this._normalizeEvent(event);\n      if (this.state.isLoaded && (interactiveLayerIds || onHover)) {\n        features = this._getFeatures({\n          pos: event.point,\n          radius: this.props.clickRadius\n        });\n      }\n      if (onHover) {\n        // backward compatibility: v3 `onHover` interface\n        event.features = features;\n        onHover(event);\n      }\n\n      const isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\n      const isEntering = isHovering && !this.state.isHovering;\n      const isExiting = !isHovering && this.state.isHovering;\n\n      if (isEntering) {\n        this._onEvent('onMouseEnter', event);\n      }\n      if (isExiting) {\n        this._onEvent('onMouseLeave', event);\n      }\n      if (isEntering || isExiting) {\n        this.setState({isHovering});\n      }\n    }\n  };\n\n  _onClick = (event: MapEvent) => {\n    const {onClick, onNativeClick, onDblClick, doubleClickZoom} = this.props;\n    let callbacks = [];\n    const isDoubleClickEnabled = onDblClick || doubleClickZoom;\n\n    // `click` is only fired on single click. `anyclick` is fired twice if double clicking.\n    // `click` has a delay period after pointer up that prevents it from firing when\n    // double clicking. `anyclick` is always fired immediately after pointer up.\n    // If double click is turned off by the user, we want to immediately fire the\n    // onClick event. Otherwise, we wait to make sure it's a single click.\n    switch (event.type) {\n      case 'anyclick':\n        callbacks.push(onNativeClick);\n        if (!isDoubleClickEnabled) {\n          callbacks.push(onClick);\n        }\n        break;\n\n      case 'click':\n        if (isDoubleClickEnabled) {\n          callbacks.push(onClick);\n        }\n        break;\n\n      default:\n    }\n\n    callbacks = callbacks.filter(Boolean);\n\n    if (callbacks.length) {\n      event = this._normalizeEvent(event);\n      // backward compatibility: v3 `onClick` interface\n      event.features = this._getFeatures({\n        pos: event.point,\n        radius: this.props.clickRadius\n      });\n      callbacks.forEach(cb => cb(event));\n    }\n  };\n\n  render() {\n    const {width, height, style, getCursor} = this.props;\n\n    const eventCanvasStyle = Object.assign({position: 'relative'}, style, {\n      width,\n      height,\n      cursor: getCursor(this.state)\n    });\n\n    return (\n      <MapContext.Provider value={this._interactiveContext}>\n        <div key=\"event-canvas\" ref={this._eventCanvasRef} style={eventCanvasStyle}>\n          <StaticMap\n            {...this.props}\n            width=\"100%\"\n            height=\"100%\"\n            style={null}\n            onResize={this._onResize}\n            onLoad={this._onLoad}\n            ref={this._staticMapRef}\n          >\n            {this.props.children}\n          </StaticMap>\n        </div>\n      </MapContext.Provider>\n    );\n  }\n}\n"],"file":"interactive-map.js"}