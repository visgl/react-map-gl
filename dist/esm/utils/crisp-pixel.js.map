{"version":3,"sources":["../../../src/utils/crisp-pixel.js"],"names":["pixelRatio","window","devicePixelRatio","crispPixel","size","Math","round","crispPercentage","el","percentage","dimension","origSize","offsetWidth","offsetHeight"],"mappings":"AAGA,IAAMA,UAAU,GAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,gBAAzC,IAA8D,CAAjF;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAkBC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAGJ,UAAlB,IAAgCA,UAAlD;AAAA,CAAnB;AAEP,OAAO,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAC7BC,EAD6B,EAE7BC,UAF6B,EAI1B;AAAA,MADHC,SACG,uEADoB,GACpB;;AACH,MAAIF,EAAE,KAAK,IAAX,EAAiB;AACf,WAAOC,UAAP;AACD;;AACD,MAAME,QAAQ,GAAGD,SAAS,KAAK,GAAd,GAAoBF,EAAE,CAACI,WAAvB,GAAqCJ,EAAE,CAACK,YAAzD;AACA,SAAQV,UAAU,CAAEM,UAAU,GAAG,GAAd,GAAqBE,QAAtB,CAAV,GAA4CA,QAA7C,GAAyD,GAAhE;AACD,CAVM","sourcesContent":["// @flow\n\n/* global window */\nconst pixelRatio = (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\nexport const crispPixel = (size: number) => Math.round(size * pixelRatio) / pixelRatio;\n\nexport const crispPercentage = (\n  el: null | HTMLDivElement,\n  percentage: number,\n  dimension: 'x' | 'y' = 'x'\n) => {\n  if (el === null) {\n    return percentage;\n  }\n  const origSize = dimension === 'x' ? el.offsetWidth : el.offsetHeight;\n  return (crispPixel((percentage / 100) * origSize) / origSize) * 100;\n};\n"],"file":"crisp-pixel.js"}