"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2911],{1505:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api-reference/maplibre/source","title":"Source","description":"This component allows apps to create a map source using React. It may contain Layer components as children.","source":"@site/../docs/api-reference/maplibre/source.md","sourceDirName":"api-reference/maplibre","slug":"/api-reference/maplibre/source","permalink":"/react-map-gl/docs/api-reference/maplibre/source","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/react-map-gl/tree/master/docs/../docs/api-reference/maplibre/source.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"ScaleControl","permalink":"/react-map-gl/docs/api-reference/maplibre/scale-control"},"next":{"title":"TerrainControl","permalink":"/react-map-gl/docs/api-reference/maplibre/terrain-control"}}');var o=t(4848),s=t(8453);const i={},c="Source",a={},l=[{value:"Properties",id:"properties",level:2},{value:"<code>id</code>: string",id:"id",level:4},{value:"<code>type</code>: string",id:"type",level:4},{value:"Source",id:"source-1",level:2}];function p(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"source",children:"Source"})}),"\n",(0,o.jsxs)(r.p,{children:["This component allows apps to create a ",(0,o.jsx)(r.a,{href:"https://maplibre.org/maplibre-style-spec/sources/",children:"map source"})," using React. It may contain ",(0,o.jsx)(r.a,{href:"/react-map-gl/docs/api-reference/maplibre/layer",children:"Layer"})," components as children."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-tsx",children:"import * as React from 'react';\r\nimport {Map, Source, Layer} from 'react-map-gl/maplibre';\r\nimport type {CircleLayer} from 'react-map-gl/maplibre';\r\nimport type {FeatureCollection} from 'geojson';\r\nimport 'maplibre-gl/dist/maplibre-gl.css';\r\n\r\nconst geojson: FeatureCollection = {\r\n  type: 'FeatureCollection',\r\n  features: [\r\n    {type: 'Feature', geometry: {type: 'Point', coordinates: [-122.4, 37.8]}}\r\n  ]\r\n};\r\n\r\nconst layerStyle: CircleLayer = {\r\n  id: 'point',\r\n  type: 'circle',\r\n  paint: {\r\n    'circle-radius': 10,\r\n    'circle-color': '#007cbf'\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  return <Map\r\n    initialViewState={{\r\n      longitude: -122.4,\r\n      latitude: 37.8,\r\n      zoom: 14\r\n    }}\r\n    mapStyle=\"https://demotiles.maplibre.org/style.json\"\r\n  >\r\n    <Source id=\"my-data\" type=\"geojson\" data={geojson}>\r\n      <Layer {...layerStyle} />\r\n    </Source>\r\n  </Map>;\r\n}\n"})}),"\n",(0,o.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)(r.p,{children:["The props provided to this component should be conforming to the ",(0,o.jsx)(r.a,{href:"https://maplibre.org/maplibre-style-spec/sources/",children:"Mapbox source specification"})," or ",(0,o.jsx)(r.a,{href:"https://maplibre.org/maplibre-gl-js/docs/API/type-aliases/CanvasSourceSpecification/",children:"CanvasSourceSpecification"}),"."]}),"\n",(0,o.jsxs)(r.p,{children:["When props change ",(0,o.jsx)(r.em,{children:"shallowly"}),", the component will attempt to update the source. Do not define objects/arrays inline to avoid perf hit."]}),"\n",(0,o.jsxs)(r.p,{children:["Once a ",(0,o.jsx)(r.code,{children:"<Source>"})," is mounted, the following props should not change. If add/remove multiple JSX sources dynamically, make sure you use React's ",(0,o.jsx)(r.a,{href:"https://reactjs.org/docs/lists-and-keys.html#keys",children:"key prop"})," to give each element a stable identity."]}),"\n",(0,o.jsxs)(r.h4,{id:"id",children:[(0,o.jsx)(r.code,{children:"id"}),": string"]}),"\n",(0,o.jsx)(r.p,{children:"Unique identifier of the source. If not provided, a default id will be assigned."}),"\n",(0,o.jsxs)(r.h4,{id:"type",children:[(0,o.jsx)(r.code,{children:"type"}),": string"]}),"\n",(0,o.jsx)(r.p,{children:"Required. Type of the source."}),"\n",(0,o.jsx)(r.h2,{id:"source-1",children:"Source"}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.a,{href:"https://github.com/visgl/react-map-gl/tree/8.0-release/modules/react-maplibre/src/components/source.ts",children:"source.ts"})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>c});var n=t(6540);const o={},s=n.createContext(o);function i(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);