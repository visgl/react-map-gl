"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2834],{6364:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"api-reference/mapbox/use-map","title":"useMap","description":"The useMap hook allows a component to reference the Map that contains it.","source":"@site/../docs/api-reference/mapbox/use-map.md","sourceDirName":"api-reference/mapbox","slug":"/api-reference/mapbox/use-map","permalink":"/react-map-gl/docs/api-reference/mapbox/use-map","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/react-map-gl/tree/master/docs/../docs/api-reference/mapbox/use-map.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"useControl","permalink":"/react-map-gl/docs/api-reference/mapbox/use-control"},"next":{"title":"Types","permalink":"/react-map-gl/docs/api-reference/mapbox/types"}}');var t=r(4848),o=r(8453);const s={},c="useMap",p={},i=[{value:"Signature",id:"signature",level:2},{value:"Source",id:"source",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"usemap",children:"useMap"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useMap"})," hook allows a component to reference the ",(0,t.jsx)(n.a,{href:"/react-map-gl/docs/api-reference/mapbox/map",children:"Map"})," that contains it."]}),"\n",(0,t.jsxs)(n.p,{children:["When used with ",(0,t.jsx)(n.a,{href:"/react-map-gl/docs/api-reference/mapbox/map-provider",children:"MapProvider"}),", this hook can also reference maps that are rendered outside of the current map component's direct render tree."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {Map, useMap} from 'react-map-gl/mapbox';\n\nfunction Root() {\n  return (\n    <Map ... >\n      <NavigationButton />\n    </Map>\n  );\n}\n\nfunction NavigateButton() {\n  const {current: map} = useMap();\n\n  const onClick = () => {\n    map.flyTo({center: [-122.4, 37.8]});\n  };\n\n  return <button onClick={onClick}>Go</button>;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["When used with the ",(0,t.jsx)(n.a,{href:"/react-map-gl/docs/api-reference/mapbox/map-provider",children:"MapProvider"}),", this hook can also reference maps that are rendered outside of the current component's direct render tree as long as both trees are part of the current ",(0,t.jsx)(n.code,{children:"<MapProvider>"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import {MapProvider, Map, useMap} from \'react-map-gl/mapbox\';\n\nfunction Root() {\n  // Note: `useMap` will not work in <Root>, only children of <MapProvider> can use `useMap`\n\n  return (\n    <MapProvider>\n      <Map id="myMapA" ... />\n      <Map id="myMapB" ... />\n      <NavigateButton />\n    </MapProvider>\n  );\n}\n\nfunction NavigateButton() {\n  const {myMapA, myMapB} = useMap();\n\n  const onClick = () => {\n    myMapA.flyTo({center: [-122.4, 37.8]});\n    myMapB.flyTo({center: [-74, 40.7]});\n  };\n\n  return <button onClick={onClick}>Go</button>;\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["See a full example ",(0,t.jsx)(n.a,{href:"https://github.com/visgl/react-map-gl/tree/8.1-release/examples/get-started/hook",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"signature",children:"Signature"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"useMap(): {current?: MapRef, [id: string]: MapRef}"})}),"\n",(0,t.jsxs)(n.p,{children:["The hook returns an object that contains all mounted maps under the closest ",(0,t.jsx)(n.code,{children:"MapProvider"}),". The keys are each map's ",(0,t.jsx)(n.a,{href:"/react-map-gl/docs/api-reference/mapbox/map#id",children:"id"})," and the values are the ",(0,t.jsx)(n.a,{href:"/react-map-gl/docs/api-reference/mapbox/types#mapref",children:"MapRef"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If the hook is used inside a decendent of a ",(0,t.jsx)(n.code,{children:"Map"})," component, the returned object additionally contains a ",(0,t.jsx)(n.code,{children:"current"})," field that references the containing map."]}),"\n",(0,t.jsx)(n.h2,{id:"source",children:"Source"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/visgl/react-map-gl/tree/8.1-release/modules/react-mapbox/src/components/use-map.tsx",children:"use-map.tsx"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var a=r(6540);const t={},o=a.createContext(t);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);