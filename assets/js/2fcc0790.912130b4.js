"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[6917],{5735:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"get-started/adding-custom-data","title":"Adding Custom Data","description":"Native Mapbox Layers","source":"@site/../docs/get-started/adding-custom-data.md","sourceDirName":"get-started","slug":"/get-started/adding-custom-data","permalink":"/react-map-gl/docs/get-started/adding-custom-data","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/react-map-gl/tree/master/docs/../docs/get-started/adding-custom-data.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"State Management","permalink":"/react-map-gl/docs/get-started/state-management"},"next":{"title":"Tips and Tricks","permalink":"/react-map-gl/docs/get-started/tips-and-tricks"}}');var n=t(4848),s=t(8453);const o={},i="Adding Custom Data",l={},c=[{value:"Native Mapbox Layers",id:"native-mapbox-layers",level:2},{value:"Custom Overlays",id:"custom-overlays",level:2},{value:"Other vis.gl Libraries",id:"other-visgl-libraries",level:2}];function d(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"adding-custom-data",children:"Adding Custom Data"})}),"\n",(0,n.jsx)(a.h2,{id:"native-mapbox-layers",children:"Native Mapbox Layers"}),"\n",(0,n.jsxs)(a.p,{children:["You can inject data and mapbox native layers using the ",(0,n.jsx)(a.a,{href:"/react-map-gl/docs/api-reference/mapbox/source",children:"Source"})," and ",(0,n.jsx)(a.a,{href:"/react-map-gl/docs/api-reference/mapbox/layer",children:"Layer"})," components:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-tsx",children:"import * as React from 'react';\nimport Map, {Source, Layer} from 'react-map-gl/maplibre';\nimport type {CircleLayer} from 'react-map-gl/maplibre';\nimport type {FeatureCollection} from 'geojson';\n\nconst geojson: FeatureCollection = {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.4, 37.8]\n      },\n      properties: {title: '915 Front Street, San Francisco, California'}\n    }\n  ]\n};\n\nconst layerStyle: CircleLayer = {\n  id: 'point',\n  type: 'circle',\n  paint: {\n    'circle-radius': 10,\n    'circle-color': '#007cbf'\n  }\n};\n\nfunction App() {\n  return (\n    <Map\n      initialViewState={{\n        longitude: -122.45,\n        latitude: 37.78,\n        zoom: 14\n      }}>\n      <Source id=\"my-data\" type=\"geojson\" data={geojson}>\n        <Layer {...layerStyle} />\n      </Source>\n    </Map>\n  );\n}\n"})}),"\n",(0,n.jsxs)(a.p,{children:["For details about data sources and layer configuration, check out the ",(0,n.jsx)(a.a,{href:"https://www.mapbox.com/mapbox-gl-js/style-spec",children:"Mapbox style specification"}),"."]}),"\n",(0,n.jsxs)(a.p,{children:["For dynamically updating data sources and layers, check out the ",(0,n.jsx)(a.a,{href:"https://visgl.github.io/react-map-gl/examples/maplibre/geojson",children:"GeoJSON"})," and ",(0,n.jsx)(a.a,{href:"http://visgl.github.io/react-map-gl/examples/maplibre/geojson-animation",children:"GeoJSON animation"})," examples."]}),"\n",(0,n.jsx)(a.h2,{id:"custom-overlays",children:"Custom Overlays"}),"\n",(0,n.jsxs)(a.p,{children:["You can implement a custom HTML or SVG overlay on top of the map that redraws whenever the camera changes. By calling ",(0,n.jsx)(a.code,{children:"map.project()"})," you can adjust the DOM or CSS properties so that the customly-drawn features are always aligned with the map. See a full example ",(0,n.jsx)(a.a,{href:"https://github.com/visgl/react-map-gl/tree/8.1-release/examples/maplibre/custom-overlay",children:"here"}),"."]}),"\n",(0,n.jsx)(a.h2,{id:"other-visgl-libraries",children:"Other vis.gl Libraries"}),"\n",(0,n.jsxs)(a.p,{children:["For more feature rich and performant data visualization overlay use cases, you may consider using other visualization libraries. react-map-gl is part of the ",(0,n.jsx)(a.a,{href:"https://www.github.com/visgl",children:"vis.gl"})," ecosystem, a suite of high-performance data visualization tools for the Web."]}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"https://deck.gl",children:"deck.gl"})," - WebGL-powered framework for the visualization of large datasets."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"https://loaders.gl",children:"loaders.gl"})," - loaders for file formats focused on visualization of big data, including point clouds, 3D geometries, images, geospatial formats as well as tabular data."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"https://nebula.gl",children:"nebula.gl"})," - 3D-enabled GeoJSON editing based on deck.gl and React."]}),"\n"]})]})}function p(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>i});var r=t(6540);const n={},s=r.createContext(n);function o(e){const a=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(s.Provider,{value:a},e.children)}}}]);