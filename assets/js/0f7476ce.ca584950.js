"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2643],{7964:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"api-reference/maplibre/use-control","title":"useControl","description":"The useControl hook is used to create React wrappers for custom map controls.","source":"@site/../docs/api-reference/maplibre/use-control.md","sourceDirName":"api-reference/maplibre","slug":"/api-reference/maplibre/use-control","permalink":"/react-map-gl/docs/api-reference/maplibre/use-control","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/react-map-gl/tree/master/docs/../docs/api-reference/maplibre/use-control.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"TerrainControl","permalink":"/react-map-gl/docs/api-reference/maplibre/terrain-control"},"next":{"title":"useMap","permalink":"/react-map-gl/docs/api-reference/maplibre/use-map"}}');var t=o(4848),l=o(8453);const a={},s="useControl",i={},p=[{value:"Signature",id:"signature",level:2},{value:"Source",id:"source",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"usecontrol",children:"useControl"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useControl"})," hook is used to create React wrappers for custom map controls."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport {Map, useControl} from 'react-map-gl/maplibre';\n\nfunction DrawControl(props: DrawControlProps) {\n  useControl(() => new MapboxDraw(props), {\n    position: props.position\n  });\n\n  return null;\n}\n\nfunction App() {\n  return (\n    <Map\n      initialViewState={{\n        longitude: -122.4,\n        latitude: 37.8,\n        zoom: 14\n      }}\n      mapStyle=\"https://demotiles.maplibre.org/style.json\"\n    >\n      <DrawControl\n        position=\"top-left\"\n        displayControlsDefault={false}\n        controls={{\n          polygon: true,\n          trash: true\n        }}\n      />\n    </Map>\n  );\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["See a full example ",(0,t.jsx)(n.a,{href:"/examples/maplibre/draw-polygon",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"signature",children:"Signature"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"useControl<T extends IControl>(\n  onCreate: ({map: MapRef, mapLib: maplibregl}) => IControl,\n  options?: {\n    position?: ControlPosition;\n  }\n): T\n\nuseControl<T extends IControl>(\n  onCreate: ({map: MapRef, mapLib: maplibregl}) => IControl,\n  onRemove: ({map: MapRef, mapLib: maplibregl}) => void,\n  options?: {\n    position?: ControlPosition;\n  }\n): T\n\nuseControl<T extends IControl>(\n  onCreate: ({map: MapRef, mapLib: maplibregl}) => IControl,\n  onAdd: ({map: MapRef, mapLib: maplibregl}) => void,\n  onRemove: ({map: MapRef, mapLib: maplibregl}) => void,\n  options?: {\n    position?: ControlPosition;\n  }\n): T\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The hook creates an ",(0,t.jsx)(n.a,{href:"https://maplibre.org/maplibre-gl-js/docs/API/interfaces/IControl/",children:"IControl"})," instance, adds it to the map when it's available, and removes it upon unmount."]}),"\n",(0,t.jsx)(n.p,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"onCreate"}),": ",(0,t.jsx)(n.code,{children:"({map: MapRef, mapLib: maplibregl}) => IControl"})," - called to create an instance of the control."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"onAdd"}),": ",(0,t.jsx)(n.code,{children:"({map: MapRef, mapLib: maplibregl}) => void"})," - called when the control has been added to the map."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"onRemove"}),": ",(0,t.jsx)(n.code,{children:"({map: MapRef, mapLib: maplibregl}) => void"})," - called when the control is about to be removed from the map."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"}),": object","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"position"}),": 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' - control position relative to the map"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Returns:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/react-map-gl/docs/api-reference/maplibre/types#icontrol",children:"IControl"})," - the control instance from ",(0,t.jsx)(n.code,{children:"onCreate"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"source",children:"Source"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/visgl/react-map-gl/tree/master/modules/maplibre/src/components/use-control.ts",children:"use-control.ts"})})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>s});var r=o(6540);const t={},l=r.createContext(t);function a(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);